{"version":3,"sources":["../../src/main/security-context.ts"],"names":[],"mappings":"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","file":"security-context.js","sourcesContent":["import { inject, Optional } from \"aurelia-dependency-injection\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { HttpClient, HttpResponseMessage } from \"aurelia-http-client\";\nimport { buildQueryString } from \"aurelia-path\";\nimport { Router, NavModel } from \"aurelia-router\";\nimport { TypeBinder } from \"type-binder\";\nimport { AuthorizeRequest } from \"./authorize-request\";\nimport { Credential } from \"./credential\";\nimport { ImplicitCredential } from \"./implicit-credential\";\nimport { PasswordCredential } from \"./password-credential\";\nimport { ProviderCredential } from \"./provider-credential\";\nimport { TokenCredential } from \"./token-credential\";\nimport { Authenticator } from \"./authenticator\";\nimport { ImplicitAuthenticator } from \"./implicit-authenticator\";\nimport { BasicAuthenticator } from \"./basic-authenticator\";\nimport { BearerAuthenticator } from \"./bearer-authenticator\";\nimport { Principal } from \"./principal\";\nimport { SecurityRole } from \"./security-role\";\nimport { HttpHeaders, MediaType } from \"aurelia-http-utils\";\nimport { LocalStorage } from \"aurelia-storage\";\n\n@inject(EventAggregator, HttpClient, Router, LocalStorage, TypeBinder)\nexport class SecurityContext {\n\n    public static AUTHENTICATED_EVENT: string = \"aurelia.security.authenticated\";\n\n    public static UNAUTHENTICATED_EVENT: string = \"aurelia.security.unauthenticated\";\n\n    public configuration: SecurityContextConfiguration;\n\n    public eventAggregator: EventAggregator;\n\n    private api: HttpClient;\n\n    private router: Router;\n\n    private authenticator: Authenticator;\n\n    private userPrincipal: Principal;\n\n    private storage: LocalStorage;\n\n    private typeBinder: TypeBinder;\n\n    public constructor(eventAggregator: EventAggregator, api: HttpClient, router: Router, storage: LocalStorage, typeBinder: TypeBinder) {\n        this.eventAggregator = eventAggregator;\n        this.router = router;\n        this.storage = storage;\n        this.typeBinder = typeBinder;\n        this.configuration = new SecurityContextConfiguration();\n        this.api = api;\n        this.api.configure(http => {\n            http.withCredentials(true);\n            http.withInterceptor(new AuthorizeRequest(this));\n        });\n    }\n\n    public configure(configuration: Object): void {\n        Object.assign(this.configuration, configuration);\n    }\n\n    public refreshRouteVisibility(router: Router): void {\n        router.navigation.forEach(nav => {\n            if (nav.settings.hideToUnauthorized) {\n                nav.settings.hide = Array.isArray(nav.settings.roles)\n                    ? !nav.settings.roles.some(r => this.isUserInRole(r))\n                    : (nav.settings.requireAuthentication && this.userPrincipal != null)\n            }\n        });\n    }\n\n    public authenticate(credential: Credential, remember: boolean = false): Promise<Principal> {\n        if (credential instanceof ImplicitCredential) {\n            this.authenticator = new ImplicitAuthenticator();\n        } else if (credential instanceof PasswordCredential) {\n            this.authenticator = new BasicAuthenticator(credential);\n        } else if (credential instanceof ProviderCredential) {\n            // TODO\n        } else if (credential instanceof TokenCredential) {\n            this.authenticator = new BearerAuthenticator(credential);\n        }\n        return this.api.get(this.configuration.getPrincipalUrl).then(success => {\n            if (remember) {\n                this.requestAccessToken(this.configuration.scope)\n                    .then(accessToken => this.storage.set(this.configuration.authorizationTokenStorageKey, accessToken))\n            }\n            this.userPrincipal = <Principal> this.typeBinder.bind(success.content, this.configuration.userPrincipalType);\n            this.eventAggregator.publish(SecurityContext.AUTHENTICATED_EVENT, this);\n            this.refreshRouteVisibility(this.router);\n            return this.userPrincipal;\n        }, failure => {\n            this.authenticator = new ImplicitAuthenticator();\n            throw failure;\n        });\n    }\n\n    public deauthenticate(navigateToSignOutRoute: boolean = true): void {\n        this.eventAggregator.publish(SecurityContext.UNAUTHENTICATED_EVENT, this);\n        this.userPrincipal = null;\n        this.deleteAndRevokeToken();\n        this.refreshRouteVisibility(this.router);\n        if (navigateToSignOutRoute) {\n            this.router.navigateToRoute(this.configuration.signOutRoute, {\n                // message: this.i18n.tr(\"aurelia:security.signout\", {\n                //     defaultValue: \"You have successfully logged out.\"\n                // }),\n                message: \"You have successfully logged out.\",\n                path: this.router.currentInstruction.fragment\n            });\n        }\n    }\n\n    public requestAccessToken(...scopes: string[]): Promise<string> {\n        return this.api.createRequest(this.configuration.accessRequestUrl).asGet()\n            .withHeader(HttpHeaders.ACCEPT, MediaType.TEXT_PLAIN)\n            .withParams({\n                \"client_id\": this.configuration.clientId,\n                \"response_type\": \"token\",\n                \"redirect_uri\": \"test\",\n                \"scope\": scopes.join(\",\")\n            }).send().then(success => success.content);\n    }\n\n    public deleteAndRevokeToken(): Promise<Authenticator> {\n        return this.storage.get(this.configuration.authorizationTokenStorageKey).then(token => Promise.all([\n            this.storage.remove(this.configuration.authorizationTokenStorageKey),\n            this.api.createRequest(this.configuration.accessRevokeUrl).asPost()\n                .withHeader(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_FORM_URLENCODED)\n                .withContent(buildQueryString({ token })).send()\n        ])).then(all => this.authenticator = new ImplicitAuthenticator());\n    }\n\n    public requestPasswordReset(principal: string): Promise<HttpResponseMessage> {\n        return this.api.createRequest(this.configuration.passwordResetUrl).asGet()\n            .withParams({\n                \"client_id\": this.configuration.clientId,\n                \"principal\": principal\n            }).send();\n    }\n\n    public resetPassword(token: string, password: string): Promise<HttpResponseMessage> {\n        return this.api.createRequest(this.configuration.passwordResetUrl).asPut()\n            .withHeader(HttpHeaders.AUTHORIZATION, `Bearer ${token}`)\n            .withHeader(HttpHeaders.CONTENT_TYPE, MediaType.TEXT_PLAIN)\n            .withContent(password)\n            .send();\n    }\n\n    public navigateToSignIn(message?: string): boolean {\n        return this.router.navigateToRoute(this.configuration.signInRoute, {\n            path: this.router.currentInstruction.fragment,\n            message: message\n        });\n    }\n\n    public navigateToSignUp(): boolean {\n        return this.router.navigateToRoute(this.configuration.signUpRoute);\n    }\n\n    public navigateToSignOut(): boolean {\n        return this.router.navigateToRoute(this.configuration.signOutRoute);\n    }\n\n    public getAuthenticator(): Authenticator {\n        return this.authenticator;\n    }\n\n    public getAuthenticationScheme(): string {\n        return this.authenticator.getScheme();\n    }\n\n    public getUserPrincipal(): Principal {\n        return this.userPrincipal;\n    }\n\n    public isUserInRole(...roleNames: string[]): boolean {\n        if (this.userPrincipal) {\n            return this.userPrincipal.roles.some(role => roleNames.indexOf(role.name) >= 0);\n        } else {\n            return false;\n        }\n    }\n\n    public isSecure(): boolean {\n        return window.location.protocol.startsWith(\"https\");\n    }\n\n}\n\nexport class SecurityContextConfiguration {\n\n    public signInRoute: string = \"sign-in\";\n\n    public signUpRoute: string = \"sign-up\";\n\n    public signOutRoute: string = \"sign-in\";\n\n    public forbiddenRoute: string = \"forbidden\";\n\n    public getPrincipalUrl: string = \"/me\";\n\n    public accessRequestUrl: string = \"/request\";\n\n    public accessRevokeUrl: string = \"/revoke\";\n\n    public accessTokenUrl: string = \"/token\";\n\n    public passwordResetUrl: string = \"/password-reset\";\n\n    public clientId: string;\n\n    public scope: string;\n\n    public authorizationTokenStorageKey: string = \"aurelia.security.authorization.token\";\n\n    public userPrincipalType: any;\n\n}\n"]}