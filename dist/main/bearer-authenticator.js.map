{"version":3,"sources":["../../src/main/bearer-authenticator.ts"],"names":[],"mappings":";;AACA,yDAAiD;AAIjD;IAMI,6BAAY,eAAgC;QACxC,IAAI,CAAC,iBAAiB,GAAG,mBAAmB,CAAC,MAAM,GAAG,GAAG,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;IAC3F,CAAC;IAEM,8CAAgB,GAAvB,UAAwB,OAA2B;QAC/C,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,gCAAW,CAAC,aAAa,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACvE,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IAEM,uCAAS,GAAhB;QACI,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC;IACtC,CAAC;IAEL,0BAAC;AAAD,CAnBA,AAmBC;AAjBkB,0BAAM,GAAW,QAAQ,CAAC;AAFhC,kDAAmB","file":"bearer-authenticator.js","sourcesContent":["import { HttpRequestMessage } from \"aurelia-http-client\";\nimport { HttpHeaders } from \"aurelia-http-utils\";\nimport { Authenticator } from \"./authenticator\";\nimport { TokenCredential } from \"./token-credential\";\n\nexport class BearerAuthenticator implements Authenticator {\n\n    private static SCHEME: string = \"Bearer\";\n\n    private authorizationData: string;\n\n    constructor(tokenCredential: TokenCredential) {\n        this.authorizationData = BearerAuthenticator.SCHEME + \" \" + tokenCredential.getToken();\n    }\n\n    public authorizeMessage(message: HttpRequestMessage): HttpRequestMessage {\n        message.headers.add(HttpHeaders.AUTHORIZATION, this.authorizationData);\n        return message;\n    }\n\n    public getScheme(): string {\n        return BearerAuthenticator.SCHEME;\n    }\n\n}\n"]}